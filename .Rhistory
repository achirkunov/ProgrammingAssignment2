sapply(mtcars, cyl, mean)
lapply(mtcars, mean)
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$mpg, mtcars$cyl, mean)
help(tapply)
debug(ls)
ls
ls()
a
help serialize
help serialize()
help(serialize)
help(jpeg)
help(xfig)
help(windows)
help(jpeg)
help(postscript)
help(xfig)
options("device")
help(windows)
help(boxplot)
help(bwplot)
help(xyplot)
help(splom)
help(plot)
help(lines)
help(barplot)
help(plot)
help(par)
help(barplot)
library(nlme)
library(lattice)
help(xyplot)
expression("theta")
substitute(theta)
expression(theta)
help(expression)
help(substitute)
set.seed(1)
rpois(5, 2)
boxplot
boxplot(1)
x=boxplot(1)
class(x)
spb_stats <- read.csv("~/Downloads/spb_stats.csv", sep=";")
View(spb_stats)
fit <- lm(price_wo_waiting ~ serving_distance, data=spb_stats)
summary(fit)
4.585e+02
2.750e-02
0.0275*1000
fit <- lm(serving_time ~ serving_distance, data=spb_stats)
summary(fit)
1844/60*25
759/60
759/60*25
1844/60
30*25
fit <- lm(serving_time/60*25 ~ serving_distance, data=spb_stats)
summary(fit)
3.613e+02
fit <- lm(price_wo_waiting ~ serving_distance/1000 + serving_time/60, data=spb_stats)
fit <- lm(price_wo_waiting ~ serving_distance + serving_time, data=spb_stats)
summary(fit)
1.448e+02
4.306e-03
4.306e-03*1000
3.617e-01*1000
3.617e-01
3.617e-01*60
spb_clean = spb_stats[spb_stats$price_wo_waiting > 500]
spb_clean = spb_stats[spb_stats$price_wo_waiting > 500,0]
View(spb_clean)
spb_clean = subset(spb_stats, price_wo_waiting > 500)
View(spb_clean)
View(spb_clean)
fit <- lm(price_wo_waiting ~ serving_distance + serving_time, data=spb_stats)
summary(fit)
4.306e-03*1000
3.617e-01*60
fit <- lm(price_wo_waiting ~ serving_distance + serving_time, data=spb_clean)
summary(fit)
8.148e-03*1000
3.803e-01*60
fit <- lm(price_wo_waiting ~ serving_distance, data=spb_clean)
summary(fit)
6.171e+02
2.619e-02*1000
nls
nls(price_wo_waiting ~ a+b*serving_distance, data=spb_clean, algorithm="port",start=c(a=0,b=0),lower=c(a=0,b=0),upper=c(a=200,b=Inf))
b*1000
0.04069 * 1000
nls(price_wo_waiting ~ a+b*serving_distance, data=spb_clean, algorithm="port",start=c(a=0,b=0),lower=c(a=0,b=0),upper=c(a=150,b=Inf))
0.04242*1000
nls(price_wo_waiting ~ a+b*serving_distance, data=spb_stats, algorithm="port",start=c(a=0,b=0),lower=c(a=0,b=0),upper=c(a=150,b=Inf))
nls(price_wo_waiting ~ a+b*serving_distance+d*serving_time, data=spb_stats, algorithm="port",start=c(a=0,b=0),lower=c(a=0,b=0),upper=c(a=150,b=Inf))
nls(price_wo_waiting ~ a+b*serving_distance+d*serving_time, data=spb_stats, algorithm="port",start=c(a=0,b=0,d=0),lower=c(a=0,b=0,d=0),upper=c(a=150,b=Inf,d=Inf))
4.306e-03*1000
3.617*60
3.617e-01*60
0.04242*1000
nls(price_wo_waiting ~ a+b*serving_distance+d*serving_time, data=spb_clean, algorithm="port",start=c(a=0,b=0,d=0),lower=c(a=0,b=0,d=0),upper=c(a=150,b=Inf,d=Inf))
0.007936*1000
0.378850*60
nls(price_wo_waiting ~ a+b*serving_distance, data=spb_clean, algorithm="port",start=c(a=0,b=0),lower=c(a=0,b=0),upper=c(a=150,b=Inf))
b*1000
0.04242*1000
fit
nls(price_wo_waiting ~ a+b*serving_distance+d*serving_time, data=spb_clean, algorithm="port",start=c(a=0,b=0,d=0),lower=c(a=0,b=0,d=0),upper=c(a=150,b=Inf,d=Inf))
nls(price_wo_waiting ~ a+b*serving_distance+d*serving_time, data=spb_clean, algorithm="port",start=c(a=0,b=0,d=0),lower=c(a=0,b=0,d=0),upper=c(a=150,b=Inf,d=Inf))
nls(price_wo_waiting ~ a+b*serving_distance+d*serving_time, data=spb_clean, algorithm="port",start=c(a=100,b=0,d=0),lower=c(a=100,b=0,d=0),upper=c(a=150,b=Inf,d=Inf))
nls(serving_distance ~ a+b*serving_time, data=spb_stats, algorithm="port",start=c(a=0,b=0),lower=c(a=0,b=0),upper=c(a=Inf,b=Inf))
fit <- lm(serving_time ~ serving_distance, data=spb_stats)
summary(fit)
fit <- lm(serving_time/60 ~ serving_distance, data=spb_stats)
fit <- lm(serving_time/60 ~ serving_distance/1000, data=spb_stats)
fit <- lm(serving_time ~ serving_distance, data=spb_stats)
summary(fit)
867.13/60
0.06411*1000
nls(serving_distance ~ a+b*serving_time, data=spb_stats, algorithm="port",start=c(a=0,b=0),lower=c(a=0,b=0),upper=c(a=Inf,b=Inf))
nls(serving_time ~ a+b*serving_distance, data=spb_stats, algorithm="port",start=c(a=0,b=0),lower=c(a=0,b=0),upper=c(a=Inf,b=Inf))
plot(serving_distance,serving_time)
plot(sps_status[serving_distance],serving_time)
plot(sps_stats[serving_distance],serving_time)
plot(spb_stats[serving_distance],serving_time)
plot(spb_stats['serving_distance'],serving_time)
plot(spb_stats['serving_distance'],spb_status['serving_time'])
plot(spb_stats['serving_distance'],spb_stats['serving_time'])
xyplot(spb_stats['serving_distance'],spb_stats['serving_time'])
plot(spb_stats$serving_distance,spb_stats$serving_time)
attach(spb_stats)
plot(serving_distance,serving_time)
ablines(lm(serving_time~serving_distance))
abline(lm(serving_time~serving_distance))
0.06411 / (60*1000)
0.06411 /60*1000
0.06411 * 60/1000
0.06411 /60*1000
867.13328/60*1000
867.13328/60
install.packages("KernSmooth")
help KernSmooth
kernsmooth
packageDescription('KernSmooth')
citation('KernSmooth')
require 'KernSmooth'
require('KernSmooth')
x <- list(2, "a", "b", TRUE
)
x[[2]]
hw1_data <- read.csv("~/Downloads/hw1_data.csv")
View(hw1_data)
hw1_data$Ozone
hw1_data$Ozone[x != NA]
hw1_data$Ozone[x == NA]
count(hw1_data$Ozone[x == NA])
sum(is.na(hw1_data$Ozone))
average(!is.na(hw1_data$Ozone))
mean(!is.na(hw1_data$Ozone))
!is.na(hw1_data$Ozone)
mean(hw1_data$Ozone,na.rm=TRUE)
newdata <- subset(hw1_data, Ozone > 31 & Temp > 90)
mean(newdata$Solar.R,na.rm=TRUE)
newdata <- subset(hw1_data, Month == 6)
mean(newdata$Temp,na.rm=TRUE)
newdata <- subset(hw1_data, Month == 5)
max(newdata$Ozone,na.rm=TRUE)
x <- c(4, "a", TRUE)
x
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
rbind(x, y)
help read.table
help(read.table)
pwd
pwd()
wd()
getwd()
cd
cd("Code")
x <- read.csv("/Users/anton/Code/rprog-005/specdata/001.csv")
View(x)
View(x)
pollutantmean("/Users/anton/Code/rprog-005/specdata","sulfate")
source("/Users/anton/Code/rprog-005/pollutantmean.R")
pollutantmean("/Users/anton/Code/rprog-005/specdata","sulfate")
source("/Users/anton/Code/rprog-005/pollutantmean.R")
pollutantmean("/Users/anton/Code/rprog-005/specdata","sulfate")
y <- pollutantmean("/Users/anton/Code/rprog-005/specdata","sulfate")
y
c("a","b")
source("/Users/anton/Code/rprog-005/pollutantmean.R")
y <- pollutantmean("/Users/anton/Code/rprog-005/specdata","sulfate")
y
source("/Users/anton/Code/rprog-005/pollutantmean.R")
paste(c("a","b"),")"
)
paste(c("a","b"),"")
paste(c("a","b"),sep="")
source("/Users/anton/Code/rprog-005/pollutantmean.R")
y <- pollutantmean("/Users/anton/Code/rprog-005/specdata","sulfate")
y
source("/Users/anton/Code/rprog-005/pollutantmean.R")
y <- pollutantmean("/Users/anton/Code/rprog-005/specdata","sulfate")
y
y[332]
print(y[332])
source("/Users/anton/Code/rprog-005/pollutantmean.R")
y <- pollutantmean("/Users/anton/Code/rprog-005/specdata","sulfate")
y
source("/Users/anton/Code/rprog-005/pollutantmean.R")
y <- pollutantmean("/Users/anton/Code/rprog-005/specdata","sulfate")
help(setwd)
sprintf("%03d", 1)
source("/Users/anton/Code/rprog-005/pollutantmean.R")
y <- pollutantmean("/Users/anton/Code/rprog-005/specdata","sulfate")
source("/Users/anton/Code/rprog-005/pollutantmean.R")
y <- pollutantmean("/Users/anton/Code/rprog-005/specdata","sulfate", 1)
y <- pollutantmean("/Users/anton/Code/rprog-005/specdata","sulfate", 1:2)
source("/Users/anton/Code/rprog-005/pollutantmean.R")
y <- pollutantmean("/Users/anton/Code/rprog-005/specdata","sulfate", 1:2)
View(y)
View(y)
y$"a"
y$"sulfate"
t <- "sulfate"
y$t
help(subset)
subset(y,"sulfate")
subset(y,TRUE,"subset")
subset(y,TRUE,"sulfate")
subset(y,TRUE,"sulfate")
w <- subset(y,TRUE,"sulfate")
w[!is.na(w)]
help(mean)
source("/Users/anton/Code/rprog-005/pollutantmean.R")
y <- pollutantmean("/Users/anton/Code/rprog-005/specdata","sulfate", 1:2)
source("/Users/anton/Code/rprog-005/pollutantmean.R")
y <- pollutantmean("/Users/anton/Code/rprog-005/specdata","sulfate", 1:2)
y <- pollutantmean("/Users/anton/Code/rprog-005/specdata","sulfate", 1:10)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
getpwd()
help(setwd)
getwd()
setwd("/Users/anton/Code/rprog-005")
submit()
submit()
getwd()
setwd("/Users/anton/Code/rprog-005")
getwd()
submit()
getwd()
setwd("/Users/anton/Code/rprog-005")
submit()
setwd("/Users/anton/Code/rprog-005")
getwd()
submit()
source("/Users/anton/Code/rprog-005/pollutantmean.R")
y <- pollutantmean("/Users/anton/Code/rprog-005/specdata","sulfate", 1:10)
list.files("/Users/anton/Code/rprog-005/specdata")
getwd()
setwd("/Users/anton/Code/rprog-005")
source("complete.R")
complete("specdata",1:2)
source("complete.R")
complete("specdata",1:2)
y <- complete("specdata",1:2)
y[1]
y[2]
y[1]
!is.na(y[1])
!is.na(y[1][1])
!is.na(y)
y
y[1,1:2]
View(x)
complete.case(y[1])
complete.cases(y[1])
complete.cases(x)
x[complete.cases(x)]
x[complete.cases(x),]
sum(x[complete.cases(x),])
help(count)
help(sum)
nrow(x[complete.cases(x),])
source("complete.R")
y <- complete("specdata",1:2)
source("complete.R")
y <- complete("specdata",1:2)
y
data.frame(id = 1:5)
data.frame(id = 1:5, nobs = 1:5)
source("complete.R")
y <- complete("specdata",1:2)
source("complete.R")
y <- complete("specdata",1:2)
View(y)
View(y)
source("complete.R")
y <- complete("specdata",1:2)
source("complete.R")
y <- complete("specdata",1:2)
y
View(y)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
submit()
submit()
submit()
na.omit(x)
complete("specdata", 1:2)
y <- complete("specdata", 1:2)
?subset
subset(y,id,nobs > 200)
subset(y,nobs > 200, select = id)
y[y$nobs > 200]
y[1,y$nobs > 200]
y[y$nobs > 200,1]
y[y$nobs > 200,]
y[,y$nobs > 200]
y[y$nobs > 200]
y[y$nobs > 200]$id
y[y$nobs > 200]
y[y$id & y$nobs > 200]
y[y$nobs > 200]
y[,y$nobs > 200]
y[y$nobs > 200,]
y[y$nobs > 200,$id]
y[y$nobs > 200,y$id]
y[y$nobs > 200,]
y[y$nobs > 200]
y$nobs > 200
y$id
y$id[y$nobs > 200]
y <- complete("specdata", 1:10)
y
y$id[y$nobs > 200]
?all
?cor
source("corr.R")
corr("specdata",1000)
x <- corr("specdata",1000)
x
x[1]
View(w)
View(y)
y <- x[1]
y
y
y[1]
y[[1]
]
x <- y[[1]]
View(x)
View(x)
cor(x$sulfate,x$nitrate)
source("corr.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
cr <- corr("specdata", 150)
submit()
submit()
submit()
swirl()
library(swirl)
rm(list=ls())
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(nrow=4,ncol=5)
my_matrix2 <- matrix(data=1:20,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cube <- function(x, n) {
x^3
}
cbind(patients,my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- c("patient","age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
h(3)
z <- 3
h(3)
f <- 3
h(3)
3L
3x
3y
getwd()
setwd("/Users/anton/Code/ProgrammingAssignment2")
source("cachematrix.R")
X <- makeCacheMatrix()
X
X.get
X$get
X$get()
X <- makeCacheMatrix(c(2,3,2,2))
X
X$get()
X <- makeCacheMatrix(c(2,3,2,2),2,2)
X <- makeCacheMatrix(c(2,3,2,2),nrow=2,ncol=2)
X <- makeCacheMatrix(x = matrix(c(2,3,2,2),nrow=2,ncol=2))
X$get()
cacheSolve(X)
cacheSolve(X)
x
library(datasets)
data(iris)
?iris
iris
mean(iris$Sepal.Length)
virginica = iris[iris$Species == "virginica"]
virginica <- iris[iris$Species == "virginica"]
iris$Species == "virginica"
iris[iris$Species == "virginica"]
iris[iris$Species == "virginica",]
virginica <- iris[iris$Species == "virginica",]
mean(virginica)
mean(virginica$Sepal.Length)
head(iris)
?apply
apply(iris[, 1:4], 1, mean)
colMeans(iris)
apply(iris, 2, mean)
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
?split
split(mtcars, mtcars$cyl)
sapply(mtcars, cyl, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
with(mtcars, tapply(mpg, cyl, mean))
?tapply
View(mtcars)
with(mtcars, tapply(hp, cyl, mean))
x <- with(mtcars, tapply(hp, cyl, mean))
x$4
x[4]
x
class(x)
x[3]-x[1]
x[3,0]-x[1]
x[3,0]
x[1,1]
debug(ls)
ls
da
ls()
quit
exit
quit
exit()
quit()
